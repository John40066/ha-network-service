apiVersion: apps/v1
kind: Deployment
metadata:
  name: database
spec:
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
    spec:
      containers:
      - name: database
        image: mysql:8.0
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: database-config
              key: database-name
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: database-password
        volumeMounts:
            - name: mysql-persistent-volume
              mountPath: /var/lib/mysql
      volumes: 
        - name: mysql-persistent-volume
          persistentVolumeClaim:
            claimName: mysql-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storage
spec:
  selector:
    matchLabels:
      app: storage
  template:
    metadata:
      labels:
        app: storage
    spec:
      containers:
      - name: storage
        image: eddielin0926/hans-storage
        ports:
        - containerPort: 8300
        env:
        - name: PORT
          value: "8300"
        - name: DB_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: database-config
              key: database-url
        - name: DB_PORT
          value: "3306"
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: database-username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: database-password
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: database-config
              key: database-name
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: "storage"
                operator: In
                values:
                - tsmchack2023-gce-grp5-4
            topologyKey: "kubernetes.io/hostname"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory
spec:
  selector:
    matchLabels:
      app: inventory
  template:
    metadata:
      labels:
        app: inventory
    spec:
      containers:
      - name: inventory
        image: eddielin0926/hans-inventory
        ports:
        - containerPort: 8200
        env:
        - name: PORT
          value: "8200"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: "storage"
                operator: In
                values:
                - tsmchack2023-gce-grp5-3
            topologyKey: "kubernetes.io/hostname"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: business
spec:
  replicas: 2
  selector:
    matchLabels:
      app: business
  template:
    metadata:
      labels:
        app: business
    spec:
      containers:
      - name: business
        image: eddielin0926/hans-business
        ports:
        - containerPort: 8100
        env:
        - name: PORT
          value: "8100"
        - name: INVENTORY_ADDRESS
          valueFrom:
            configMapKeyRef:
             name: inventory-config
             key: inventory-url
        - name: INVENTORY_PORT
          value: "8200"
        - name: STORAGE_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: storage-config
              key: storage-url
        - name: STORAGE_PORT
          value: "8300"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: "business"
                operator: In
                values:
                - tsmchack2023-gce-grp5-1
                - tsmchack2023-gce-grp5-2
            topologyKey: "kubernetes.io/hostname"
